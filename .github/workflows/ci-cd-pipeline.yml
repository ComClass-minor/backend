name: CI/CD Pipeline with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Docker Buildx (Docker Compose is included with Docker CLI)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up Python (if needed to run the config file to generate .env)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      # Generate .env file
      - name: Generate .env file
        run: |
          python core/config.py

      # Check if the .env file was generated
      - name: Check if the .env file was generated
        run: cat core/.env

      # Build Docker images using Docker Compose
      - name: Build services
        run: docker compose build

      # Deploy services in detached mode
      - name: Deploy services
        run: docker compose up -d
      
      - name: clean up
        run: docker compose down
  
  # we will add dummy test to make sure that this stage is working
  testing:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests 
        run: |
          sleep 10
          echo "Running tests..."
  
  
  
  deploy:
    needs: testing  # Assuming you have a testing job
    runs-on: ubuntu-latest
    
    env:
      REGISTRY_NAME: comclassminorregistry
      APP_NAME: comclass-minor-backend
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Set up Python
        uses: actions/setup-python@v4  # Updated to v4
        with:
          python-version: '3.11'  # Specify exact version
          cache: 'pip'  # Enable pip caching
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Add any other dependencies you need for config.py
          
      - name: Generate .env file
        env:
          # Add any secrets needed for config.py
          SECRET_KEY: ${{ secrets.REGISTRY_PASSWORD }}
          # Add other environment variables
        run: |
          python core/config.py
          
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1  # Use Azure's official action
        with:
          login-server: comclassminorregistry.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          
      - name: Build  all images and push one 
        run: |
          # Build and push backend
          docker compose build
          docker push comclassminorregistry.azurecr.io/backend-minor:latest
      
      - name : Push the Database image to Azure Container Registry
        run: |
          docker push comclassminorregistry.azurecr.io/mongo:latest
          
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: comclass-minor-backend
          images: comclassminorregistry.azurecr.io/comclass-minor-backend:latest
          
      # Add container app configuration
      - name: Configure container app settings
        run: |
          az webapp config container set \
            --name comclass-minor-backend\
            --resource-group 569726b3-97fa-4cf7-adba-67d07fde439c_rg_4570\
            --docker-custom-image-name comclassminorregistry.azurecr.io/comclass-minor-backend:latest \
            --docker-registry-server-url https://comclassminorregistry.azurecr.io \
            --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} \
            --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} \
            --multicontainer-config-type compose \
            --multicontainer-config-file docker-compose.yml
            
      # Configure app settings
      - name: Configure app settings
        run: |
          az webapp config appsettings set \
            --name comclass-minor-backend\
            --resource-group 569726b3-97fa-4cf7-adba-67d07fde439c_rg_4570 \
            --settings \
              WEBSITES_ENABLE_APP_SERVICE_STORAGE=true \
              WEBSITES_PORT=8000 \
              MONGODB_URI="mongodb://mongodb:27017"
              
      # Enable logging
      - name: Enable logging
        run: |
          az webapp log config \
            --name comclass-minor-backend\
            --resource-group your-resource-group\
            --docker-container-logging filesystem
